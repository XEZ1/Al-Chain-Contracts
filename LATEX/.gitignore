# Log file
*.log

.DS_Store
*.aux
*.bbl
*.blg
*.tcp
*.toc
*.tps
/report.synctex.gz

### Django ###
.log
.pot
.pyc
__pycache__
local_settings.py
db.sqlite3
db.sqlite3-journal
media

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles
# in your Git repository. Update and uncomment the following line accordingly.
# django-project-namestaticfiles

### Django.Python Stack ###
# Byte-compiled  optimized  DLL files
.py[cod]
$py.class

# C extensions
.so

# Distribution  packaging
.Python
build
develop-eggs
dist
downloads
eggs
.eggs
lib
lib64
parts
sdist
var
wheels
sharepython-wheels
.egg-info
.installed.cfg
.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject dateother infos into it.
.manifest
.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test  coverage reports
htmlcov
.tox
.nox
.coverage
.coverage.
.cache
nosetests.xml
coverage.xml
.cover
.py,cover
.hypothesis
.pytest_cache
cover

# Translations
.mo

# Django stuff

# Flask stuff
instance
.webassets-cache

# Scrapy stuff
.scrapy

# Sphinx documentation
docs_build

# PyBuilder
.pybuilder
target

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in
# .python-version

# pipenv
#   According to pypapipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   httpspython-poetry.orgdocsbasic-usage#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   httpspdm.fming.dev#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.comDavid-OConnorpyflow and github.compdm-projectpdm
__pypackages__

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
.sage.py

# Environments
.env
.venv
env
venv
ENV
env.bak
venv.bak

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
site

# mypy
.mypy_cache
.dmypy.json
dmypy.json

# Pyre type checker
.pyre

# pytype static type analyzer
.pytype

# Cython debug symbols
cython_debug

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at httpsgithub.comgithubgitignoreblobmainGlobalJetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea

### Java ###
# Compiled class file
.class

# Log file

# BlueJ files
.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp

# Package Files #
.jar
.war
.nar
.ear
.zip
.tar.gz
.rar

# virtual machine crash logs, see httpwww.java.comendownloadhelperror_hotspot.xml
hs_err_pid
replay_pid

### Linux ###
~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-

# .nfs files are created when an open file is removed but is still being accessed
.nfs

### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two r
Icon


# Thumbnails
._

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### macOS Patch ###
# iCloud generated files
.icloud

### Node ###
# Logs
logs
npm-debug.log
yarn-debug.log
yarn-error.log
lerna-debug.log
.pnpm-debug.log

# Diagnostic reports (httpsnodejs.orgapireport.html)
report.[0-9].[0-9].[0-9].[0-9].json

# Runtime data
pids
.pid
.seed
.pid.lock

# Directory for instrumented libs generated by jscoverageJSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (httpsgruntjs.comcreating-plugins#storing-task-files)
.grunt

# Bower dependency directory (httpsbower.io)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (httpsnodejs.orgapiaddons.html)
buildRelease

# Dependency directories
node_modules
jspm_packages

# Snowpack dependency directory (httpssnowpack.dev)
web_modules

# TypeScript cache
.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache
.rts2_cache_cjs
.rts2_cache_es
.rts2_cache_umd

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (httpsparceljs.org)
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build  generate output
.nuxt
dist

# Gatsby files
.cache
# Comment in the public line in if your project uses Gatsby and not Next.js
# httpsnextjs.orgblognext-9-1#public-directory-support
# public

# vuepress build output
.vuepressdist

# vuepress v2.x temp and cache directory
.temp

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless

# FuseBox cache
.fusebox

# DynamoDB Local files
.dynamodb

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarncache
.yarnunplugged
.yarnbuild-state.yml
.yarninstall-state.gz
.pnp.

### Node Patch ###
# Serverless Webpack directories
.webpack

# Optional stylelint cache

# SvelteKit build  generate output
.svelte-kit

### PyCharm+all ###
# Covers JetBrains IDEs IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference httpsintellij-support.jetbrains.comhcen-usarticles206544839

# User-specific stuff
.ideaworkspace.xml
.ideatasks.xml
.ideausage.statistics.xml
.ideadictionaries
.ideashelf

# AWS User-specific
.ideaaws.xml

# Generated files
.ideacontentModel.xml

# Sensitive or high-churn files
.ideadataSources
.ideadataSources.ids
.ideadataSources.local.xml
.ideasqlDataSources.xml
.ideadynamic.xml
.ideauiDesigner.xml
.ideadbnavigator.xml

# Gradle
.ideagradle.xml
.idealibraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .ideaartifacts
# .ideacompiler.xml
# .ideajarRepositories.xml
# .ideamodules.xml
# .idea.iml
# .ideamodules
# .iml
# .ipr

# CMake
cmake-build-

# Mongo Explorer plugin
.ideamongoSettings.xml

# File-based project format
.iws

# IntelliJ
out

# mpeltonensbt-idea plugin
.idea_modules

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.ideareplstate.xml

# SonarLint plugin
.ideasonarlint

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.ideahttpRequests

# Android studio 3.1+ serialized cache file
.ideacachesbuild_file_checksums.ser

### PyCharm+all Patch ###
# Ignore everything but code style settings and run configurations
# that are supposed to be shared within teams.

.idea

!.ideacodeStyles
!.idearunConfigurations

### Python ###
# Byte-compiled  optimized  DLL files

# C extensions

# Distribution  packaging

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject dateother infos into it.

# Installer logs

# Unit test  coverage reports

# Translations

# Django stuff

# Flask stuff

# Scrapy stuff

# Sphinx documentation

# PyBuilder

# Jupyter Notebook

# IPython

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in
# .python-version

# pipenv
#   According to pypapipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   httpspython-poetry.orgdocsbasic-usage#commit-your-poetrylock-file-to-version-control

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   httpspdm.fming.dev#use-with-ide

# PEP 582; used by e.g. github.comDavid-OConnorpyflow and github.compdm-projectpdm

# Celery stuff

# SageMath parsed files

# Environments

# Spyder project settings

# Rope project settings

# mkdocs documentation

# mypy

# Pyre type checker

# pytype static type analyzer

# Cython debug symbols

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at httpsgithub.comgithubgitignoreblobmainGlobalJetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.

### Python Patch ###
# Poetry local configuration file - httpspython-poetry.orgdocsconfiguration#local-configuration
poetry.toml

# ruff
.ruff_cache

# LSP config files
pyrightconfig.json

### VisualStudioCode ###
.vscode
!.vscodesettings.json
!.vscodetasks.json
!.vscodelaunch.json
!.vscodeextensions.json
!.vscode.code-snippets

# Local History for Visual Studio Code
.history

# Built Visual Studio Code Extensions
.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

### WebStorm+all ###
# Covers JetBrains IDEs IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference httpsintellij-support.jetbrains.comhcen-usarticles206544839

# User-specific stuff

# AWS User-specific

# Generated files

# Sensitive or high-churn files

# Gradle

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .ideaartifacts
# .ideacompiler.xml
# .ideajarRepositories.xml
# .ideamodules.xml
# .idea.iml
# .ideamodules
# .iml
# .ipr

# CMake

# Mongo Explorer plugin

# File-based project format

# IntelliJ

# mpeltonensbt-idea plugin

# JIRA plugin

# Cursive Clojure plugin

# SonarLint plugin

# Crashlytics plugin (for Android Studio and IntelliJ)

# Editor-based Rest Client

# Android studio 3.1+ serialized cache file

### WebStorm+all Patch ###
# Ignore everything but code style settings and run configurations
# that are supposed to be shared within teams.



### Windows ###
# Windows thumbnail cache files
Thumbs.db
Thumbs.dbencryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN

# Windows Installer files
.cab
.msi
.msix
.msm
.msp

# Windows shortcuts
.lnk

### AndroidStudio ###
# Covers files to be ignored for android development using Android Studio.

# Built application files
.apk
.ap_
.aab

# Files for the ARTDalvik VM
.dex

# Java class files

# Generated files
bin
gen

# Gradle files
.gradle
.gradle

# Signing files
.signing

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard

# Log Files

# Android Studio
build
local.properties
out
build
production
captures
.navigation
.ipr
.swp

# Keystore files
.jks
.keystore

# Google Services (e.g. APIs or Firebase)
# google-services.json

# Android Patch
gen-external-apklibs

# External native build folder generated in Android Studio 2.2 and later
.externalNativeBuild

# NDK
obj

# IntelliJ IDEA
.iml
out

# User-specific configurations
.ideacaches
.idealibraries
.ideashelf
.ideaworkspace.xml
.ideatasks.xml
.idea.name
.ideacompiler.xml
.ideacopyrightprofiles_settings.xml
.ideaencodings.xml
.ideamisc.xml
.ideamodules.xml
.ideascopesscope_settings.xml
.ideadictionaries
.ideavcs.xml
.ideajsLibraryMappings.xml
.ideadatasources.xml
.ideadataSources.ids
.ideasqlDataSources.xml
.ideadynamic.xml
.ideauiDesigner.xml
.ideaassetWizardSettings.xml
.ideagradle.xml
.ideajarRepositories.xml
.ideanavEditor.xml

# Legacy Eclipse project files
.classpath
.project
.cproject
.settings

# Mobile Tools for Java (J2ME)

# Package Files #

# virtual machine crash logs (Reference httpwww.java.comendownloadhelperror_hotspot.xml)

## Plugin-specific files

# mpeltonensbt-idea plugin

# JIRA plugin

# Mongo Explorer plugin
.ideamongoSettings.xml

# Crashlytics plugin (for Android Studio and IntelliJ)

### AndroidStudio Patch ###

!gradlewrappergradle-wrapper.jar